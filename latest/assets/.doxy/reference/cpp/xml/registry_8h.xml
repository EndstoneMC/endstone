<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="registry_8h" kind="file" language="C++">
    <compoundname>registry.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">fmt/format.h</includes>
    <includedby refid="item__stack_8h" local="yes">include/endstone/inventory/item_stack.h</includedby>
    <includedby refid="item__type_8h" local="yes">include/endstone/inventory/item_type.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/endstone/registry.h</label>
        <link refid="registry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>fmt/format.h</label>
      </node>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="3">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/endstone/actor/item.h</label>
        <link refid="item_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/endstone/event/block/block_cook_event.h</label>
        <link refid="block__cook__event_8h_source"/>
      </node>
      <node id="11">
        <label>include/endstone/event/chunk/chunk_event.h</label>
        <link refid="chunk__event_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/endstone/event/chunk/chunk_load_event.h</label>
        <link refid="chunk__load__event_8h_source"/>
      </node>
      <node id="13">
        <label>include/endstone/event/chunk/chunk_unload_event.h</label>
        <link refid="chunk__unload__event_8h_source"/>
      </node>
      <node id="10">
        <label>include/endstone/event/level/dimension_event.h</label>
        <link refid="dimension__event_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/endstone/event/player/player_drop_item_event.h</label>
        <link refid="player__drop__item__event_8h_source"/>
      </node>
      <node id="7">
        <label>include/endstone/event/player/player_item_consume_event.h</label>
        <link refid="player__item__consume__event_8h_source"/>
      </node>
      <node id="4">
        <label>include/endstone/event/player/player_pickup_item_event.h</label>
        <link refid="player__pickup__item__event_8h_source"/>
      </node>
      <node id="2">
        <label>include/endstone/inventory/item_stack.h</label>
        <link refid="item__stack_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>include/endstone/inventory/item_type.h</label>
        <link refid="item__type_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/endstone/inventory/recipe.h</label>
        <link refid="recipe_8h_source"/>
      </node>
      <node id="9">
        <label>include/endstone/level/dimension.h</label>
        <link refid="dimension_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/endstone/registry.h</label>
        <link refid="registry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classendstone_1_1Registry" prot="public">endstone::Registry</innerclass>
    <innernamespace refid="namespaceendstone">endstone</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2024,<sp/>The<sp/>Endstone<sp/>Project.<sp/>(https://endstone.dev)<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt/format.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceendstone" kindref="compound">endstone</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="32" refid="classendstone_1_1Registry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classendstone_1_1Registry" kindref="compound">Registry</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classendstone_1_1Registry" kindref="compound">~Registry</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classendstone_1_1Registry_1a62de53f9a1af2cfde7b0ff98bd5187a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classendstone_1_1Vector" kindref="compound">T</ref><sp/>*<ref refid="classendstone_1_1Registry_1a62de53f9a1af2cfde7b0ff98bd5187a2" kindref="member">get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/><ref refid="classendstone_1_1Vector" kindref="compound">key</ref>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classendstone_1_1Registry_1a9f8ee4924a4f789666536537bec689c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classendstone_1_1Vector" kindref="compound">T</ref><sp/>*<ref refid="classendstone_1_1Registry_1a9f8ee4924a4f789666536537bec689c5" kindref="member">get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/><ref refid="classendstone_1_1Vector" kindref="compound">key</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classendstone_1_1Registry_1a810eb72599f3fc7b2d48ef3be2cacd6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classendstone_1_1Vector" kindref="compound">T</ref><sp/>&amp;<ref refid="classendstone_1_1Registry_1a810eb72599f3fc7b2d48ef3be2cacd6f" kindref="member">getOrThrow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/><ref refid="classendstone_1_1Vector" kindref="compound">key</ref>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*<ref refid="classendstone_1_1Vector" kindref="compound">p</ref><sp/>=<sp/><ref refid="classendstone_1_1Registry_1a62de53f9a1af2cfde7b0ff98bd5187a2" kindref="member">get</ref>(<ref refid="classendstone_1_1Vector" kindref="compound">key</ref>))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classendstone_1_1Vector" kindref="compound">p</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(fmt::format(</highlight><highlight class="stringliteral">&quot;No<sp/>registry<sp/>entry<sp/>found<sp/>for<sp/>key:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classendstone_1_1Vector" kindref="compound">key</ref>));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classendstone_1_1Registry_1a96ea1a8193696a2da85d8b765512a915" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classendstone_1_1Vector" kindref="compound">T</ref><sp/>&amp;<ref refid="classendstone_1_1Registry_1a96ea1a8193696a2da85d8b765512a915" kindref="member">getOrThrow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/><ref refid="classendstone_1_1Vector" kindref="compound">key</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="77"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*<ref refid="classendstone_1_1Vector" kindref="compound">p</ref><sp/>=<sp/><ref refid="classendstone_1_1Registry_1a62de53f9a1af2cfde7b0ff98bd5187a2" kindref="member">get</ref>(<ref refid="classendstone_1_1Vector" kindref="compound">key</ref>))<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classendstone_1_1Vector" kindref="compound">p</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(fmt::format(</highlight><highlight class="stringliteral">&quot;No<sp/>registry<sp/>entry<sp/>found<sp/>for<sp/>key:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classendstone_1_1Vector" kindref="compound">key</ref>));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classendstone_1_1Registry_1ad4ccf75b2d21093309be4663cbc9e71b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classendstone_1_1Registry_1ad4ccf75b2d21093309be4663cbc9e71b" kindref="member">forEach</ref>(std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classendstone_1_1Vector" kindref="compound">T</ref><sp/>&amp;)&gt;<sp/><ref refid="classendstone_1_1Vector" kindref="compound">func</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>endstone</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/endstone/registry.h"/>
  </compounddef>
</doxygen>
