<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classendstone_1_1Image" kind="class" language="C++" prot="public">
    <compoundname>endstone::Image</compoundname>
    <includes refid="image_8h" local="no">endstone/util/image.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3b" prot="public" static="no" strong="yes">
        <type></type>
        <name>Type</name>
        <qualifiedname>endstone::Image::Type</qualifiedname>
        <enumvalue id="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3ba4bbb8f967da6d1a610596d7257179c2b" prot="public">
          <name>Invalid</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3bad3f6975213fb5546d8486b54b025dbd7" prot="public">
          <name>Grayscale</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>8-bit pixels, grayscale </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3ba889574aebacda6bfd3e534e2b49b8028" prot="public">
          <name>RGB</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>3x8-bit pixels, true color </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3baea3495a278957dc58165e48a8945469f" prot="public">
          <name>RGBA</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>4x8-bit pixels, true color with transparency mask </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="29" column="5" bodyfile="include/endstone/util/image.h" bodystart="29" bodyend="43"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classendstone_1_1Image_1adbbf675bb89a2b6595c5d9364afec233" prot="private" static="no" mutable="no">
        <type><ref refid="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3b" kindref="member">Type</ref></type>
        <definition>Type endstone::Image::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <qualifiedname>endstone::Image::type_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="225" column="10" bodyfile="include/endstone/util/image.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classendstone_1_1Image_1a432c905a350795e507e4c5ec20c46d3c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int endstone::Image::width_</definition>
        <argsstring></argsstring>
        <name>width_</name>
        <qualifiedname>endstone::Image::width_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="226" column="9" bodyfile="include/endstone/util/image.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classendstone_1_1Image_1ac756b938c6e000492398ab4137e7a15a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int endstone::Image::height_</definition>
        <argsstring></argsstring>
        <name>height_</name>
        <qualifiedname>endstone::Image::height_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="227" column="9" bodyfile="include/endstone/util/image.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classendstone_1_1Image_1abce3555f620032b2ae87b7098219257f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string endstone::Image::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>endstone::Image::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="228" column="17" bodyfile="include/endstone/util/image.h" bodystart="228" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1Image_1a312c38a53a5e27f6b10c4d0e62f1f630" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>endstone::Image::Image</definition>
        <argsstring>(const Type type, const int width, const int height)</argsstring>
        <name>Image</name>
        <qualifiedname>endstone::Image::Image</qualifiedname>
        <param>
          <type>const <ref refid="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3b" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Create an empty image (all pixels transparent black). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> width in pixels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> height in pixels </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="52" column="14" bodyfile="include/endstone/util/image.h" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Image_1ab592f7b0673fc9dcbaf9e9ebfcc1a76b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int endstone::Image::getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <qualifiedname>endstone::Image::getWidth</qualifiedname>
        <briefdescription>
<para>Get the image width. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> width in pixels </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="69" column="10" bodyfile="include/endstone/util/image.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Image_1a1a37e02cab2cd6c3e80c9b50b2ec8c93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int endstone::Image::getHeight</definition>
        <argsstring>() const</argsstring>
        <name>getHeight</name>
        <qualifiedname>endstone::Image::getHeight</qualifiedname>
        <briefdescription>
<para>Get the image height. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> height in pixels </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="79" column="10" bodyfile="include/endstone/util/image.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Image_1ac87dac3e15a668005e46fc9e31c82d65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int endstone::Image::getDepth</definition>
        <argsstring>() const</argsstring>
        <name>getDepth</name>
        <qualifiedname>endstone::Image::getDepth</qualifiedname>
        <briefdescription>
<para>Get the image depth. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> depth </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="89" column="10" bodyfile="include/endstone/util/image.h" bodystart="89" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Image_1a58311542846d5ed447a69f2c17d06d6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classendstone_1_1Color" kindref="compound">Color</ref></type>
        <definition>Color endstone::Image::getColor</definition>
        <argsstring>(const int x, const int y) const</argsstring>
        <name>getColor</name>
        <qualifiedname>endstone::Image::getColor</qualifiedname>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Get the color of a pixel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate (0 ≤ x &lt; width) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate (0 ≤ y &lt; height)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classendstone_1_1Color" kindref="compound">Color</ref> at (x, y) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="111" column="12" bodyfile="include/endstone/util/image.h" bodystart="111" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Image_1a3345e47562e1f00eaf6d3e944517f60f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void endstone::Image::setColor</definition>
        <argsstring>(const int x, const int y, const Color color)</argsstring>
        <name>setColor</name>
        <qualifiedname>endstone::Image::setColor</qualifiedname>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classendstone_1_1Color" kindref="compound">Color</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set the color of a pixel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X coordinate (0 ≤ x &lt; width) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coordinate (0 ≤ y &lt; height) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>New color for the pixel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="142" column="10" bodyfile="include/endstone/util/image.h" bodystart="142" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Image_1a11876f62967de8de031c79aee31cc3a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view endstone::Image::getData</definition>
        <argsstring>() const</argsstring>
        <name>getData</name>
        <qualifiedname>endstone::Image::getData</qualifiedname>
        <briefdescription>
<para>Gets the raw pixel buffer (row-major, H x W x D). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The underlying image data buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="170" column="23" bodyfile="include/endstone/util/image.h" bodystart="170" bodyend="173"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classendstone_1_1Image_1adb854b500bb55257e067e3232c8511c2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>endstone::Image::Image</definition>
        <argsstring>(const Type type, const int width, const int height, const std::string_view data)</argsstring>
        <name>Image</name>
        <qualifiedname>endstone::Image::Image</qualifiedname>
        <param>
          <type>const <ref refid="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3b" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="58" column="5" bodyfile="include/endstone/util/image.h" bodystart="58" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classendstone_1_1Image_1a3a1c8f43ddaa26480349a1bb1e13132f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Result&lt; <ref refid="classendstone_1_1Image" kindref="compound">Image</ref> &gt;</type>
        <definition>static Result&lt; Image &gt; endstone::Image::fromArray</definition>
        <argsstring>(Type type, const int width, const int height, const std::vector&lt; unsigned char &gt; &amp;array)</argsstring>
        <name>fromArray</name>
        <qualifiedname>endstone::Image::fromArray</qualifiedname>
        <param>
          <type><ref refid="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3b" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
<para>Creates an image from the pixel data in a byte array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> width in pixels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> height in pixels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The image on success, or an error on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="184" column="19" bodyfile="include/endstone/util/image.h" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Image_1a34842adf667ed77decdc8a3de25d4367" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Result&lt; <ref refid="classendstone_1_1Image" kindref="compound">Image</ref> &gt;</type>
        <definition>static Result&lt; Image &gt; endstone::Image::fromBuffer</definition>
        <argsstring>(Type type, const int width, const int height, std::string_view buffer)</argsstring>
        <name>fromBuffer</name>
        <qualifiedname>endstone::Image::fromBuffer</qualifiedname>
        <param>
          <type><ref refid="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3b" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Creates an image from the pixel data in a byte buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> width in pixels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Image" kindref="compound">Image</ref> height in pixels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The image on success, or an error on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/util/image.h" line="200" column="19" bodyfile="include/endstone/util/image.h" bodystart="200" bodyend="222"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents an RGBA image. </para>
    </briefdescription>
    <detaileddescription>
<para>Each pixel is four bytes: R, G, B, A, in row-major order. </para>
    </detaileddescription>
    <location file="include/endstone/util/image.h" line="27" column="1" bodyfile="include/endstone/util/image.h" bodystart="27" bodyend="229"/>
    <listofallmembers>
      <member refid="classendstone_1_1Image_1abce3555f620032b2ae87b7098219257f" prot="private" virt="non-virtual"><scope>endstone::Image</scope><name>data_</name></member>
      <member refid="classendstone_1_1Image_1a3a1c8f43ddaa26480349a1bb1e13132f" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>fromArray</name></member>
      <member refid="classendstone_1_1Image_1a34842adf667ed77decdc8a3de25d4367" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>fromBuffer</name></member>
      <member refid="classendstone_1_1Image_1a58311542846d5ed447a69f2c17d06d6c" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>getColor</name></member>
      <member refid="classendstone_1_1Image_1a11876f62967de8de031c79aee31cc3a6" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>getData</name></member>
      <member refid="classendstone_1_1Image_1ac87dac3e15a668005e46fc9e31c82d65" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>getDepth</name></member>
      <member refid="classendstone_1_1Image_1a1a37e02cab2cd6c3e80c9b50b2ec8c93" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>getHeight</name></member>
      <member refid="classendstone_1_1Image_1ab592f7b0673fc9dcbaf9e9ebfcc1a76b" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>getWidth</name></member>
      <member refid="classendstone_1_1Image_1ac756b938c6e000492398ab4137e7a15a" prot="private" virt="non-virtual"><scope>endstone::Image</scope><name>height_</name></member>
      <member refid="classendstone_1_1Image_1a312c38a53a5e27f6b10c4d0e62f1f630" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>Image</name></member>
      <member refid="classendstone_1_1Image_1adb854b500bb55257e067e3232c8511c2" prot="private" virt="non-virtual"><scope>endstone::Image</scope><name>Image</name></member>
      <member refid="classendstone_1_1Image_1a3345e47562e1f00eaf6d3e944517f60f" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>setColor</name></member>
      <member refid="classendstone_1_1Image_1ab90b74144efbc447609b079e7089dd3b" prot="public" virt="non-virtual"><scope>endstone::Image</scope><name>Type</name></member>
      <member refid="classendstone_1_1Image_1adbbf675bb89a2b6595c5d9364afec233" prot="private" virt="non-virtual"><scope>endstone::Image</scope><name>type_</name></member>
      <member refid="classendstone_1_1Image_1a432c905a350795e507e4c5ec20c46d3c" prot="private" virt="non-virtual"><scope>endstone::Image</scope><name>width_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
