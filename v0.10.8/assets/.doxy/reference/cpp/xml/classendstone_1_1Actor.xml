<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classendstone_1_1Actor" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>endstone::Actor</compoundname>
    <basecompoundref refid="classendstone_1_1CommandSender" prot="public" virt="non-virtual">endstone::CommandSender</basecompoundref>
    <derivedcompoundref refid="classendstone_1_1Item" prot="public" virt="non-virtual">endstone::Item</derivedcompoundref>
    <derivedcompoundref refid="classendstone_1_1Mob" prot="public" virt="non-virtual">endstone::Mob</derivedcompoundref>
    <includes refid="actor_8h" local="no">endstone/actor/actor.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1Actor_1acbd7afe34e58507083765ae5d27ff9c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Mob" kindref="compound">Mob</ref> *</type>
        <definition>virtual Mob * endstone::Actor::asMob</definition>
        <argsstring>() const =0</argsstring>
        <name>asMob</name>
        <qualifiedname>endstone::Actor::asMob</qualifiedname>
        <briefdescription>
<para>Gets an <ref refid="classendstone_1_1Actor" kindref="compound">Actor</ref> as <ref refid="classendstone_1_1Mob" kindref="compound">Mob</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classendstone_1_1Mob" kindref="compound">Mob</ref>, nullptr if not an <ref refid="classendstone_1_1Mob" kindref="compound">Mob</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="34" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a6c81fe219b046d28cdf13c5c400793c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Item" kindref="compound">Item</ref> *</type>
        <definition>virtual Item * endstone::Actor::asItem</definition>
        <argsstring>() const =0</argsstring>
        <name>asItem</name>
        <qualifiedname>endstone::Actor::asItem</qualifiedname>
        <briefdescription>
<para>Gets an <ref refid="classendstone_1_1Actor" kindref="compound">Actor</ref> as <ref refid="classendstone_1_1Item" kindref="compound">Item</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classendstone_1_1Item" kindref="compound">Item</ref>, nullptr if not an <ref refid="classendstone_1_1Item" kindref="compound">Item</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="41" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a35dbee5875715f9edd8be8b117377129" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string endstone::Actor::getType</definition>
        <argsstring>() const =0</argsstring>
        <name>getType</name>
        <qualifiedname>endstone::Actor::getType</qualifiedname>
        <briefdescription>
<para>Get the type of the actor. </para>
        </briefdescription>
        <detaileddescription>
<para>This method returns the type of the actor as a string, for example, minecraft:pig.</para>
<para><simplesect kind="return"><para>The type of the actor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="50" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1ab2848bd47a25fce207a1a4e6b1783ce3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::uint64_t</type>
        <definition>virtual std::uint64_t endstone::Actor::getRuntimeId</definition>
        <argsstring>() const =0</argsstring>
        <name>getRuntimeId</name>
        <qualifiedname>endstone::Actor::getRuntimeId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the runtime id for this actor</para>
<para><simplesect kind="return"><para>Runtime id for this actor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="57" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a32d24d587443d4107786096fda5322fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Location" kindref="compound">Location</ref></type>
        <definition>virtual Location endstone::Actor::getLocation</definition>
        <argsstring>() const =0</argsstring>
        <name>getLocation</name>
        <qualifiedname>endstone::Actor::getLocation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the actor&apos;s current position</para>
<para><simplesect kind="return"><para>a new copy of <ref refid="classendstone_1_1Location" kindref="compound">Location</ref> containing the position of this actor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="64" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a0f73b7b1bcc0f18ce4cc238fdcea69b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Vector" kindref="compound">Vector</ref>&lt; float &gt;</type>
        <definition>virtual Vector&lt; float &gt; endstone::Actor::getVelocity</definition>
        <argsstring>() const =0</argsstring>
        <name>getVelocity</name>
        <qualifiedname>endstone::Actor::getVelocity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets this actor&apos;s current velocity</para>
<para><simplesect kind="return"><para>Current traveling velocity of this actor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="71" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a7cfff436cf3ddabdb1f28f744234f218" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Actor::isOnGround</definition>
        <argsstring>() const =0</argsstring>
        <name>isOnGround</name>
        <qualifiedname>endstone::Actor::isOnGround</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the actor is supported by a block.</para>
<para><simplesect kind="return"><para>True if actor is on ground. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="78" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a07d1ec2bc5458fbd0c4d60711e4ddcd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Actor::isInWater</definition>
        <argsstring>() const =0</argsstring>
        <name>isInWater</name>
        <qualifiedname>endstone::Actor::isInWater</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the actor is in water.</para>
<para><simplesect kind="return"><para>True if the actor is in water. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="85" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a876f9f220c4628b15556f2b50b103928" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Actor::isInLava</definition>
        <argsstring>() const =0</argsstring>
        <name>isInLava</name>
        <qualifiedname>endstone::Actor::isInLava</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the actor is in lava.</para>
<para><simplesect kind="return"><para>True if the actor is in lava. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="92" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1aff1ed8218696acc7009bf7ce5a5069a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Level" kindref="compound">Level</ref> &amp;</type>
        <definition>virtual Level &amp; endstone::Actor::getLevel</definition>
        <argsstring>() const =0</argsstring>
        <name>getLevel</name>
        <qualifiedname>endstone::Actor::getLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the current <ref refid="classendstone_1_1Level" kindref="compound">Level</ref> this actor resides in</para>
<para><simplesect kind="return"><para>The current <ref refid="classendstone_1_1Level" kindref="compound">Level</ref> this actor resides in </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="99" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1ab4562c41d071b945338d742ac8d1e639" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Dimension" kindref="compound">Dimension</ref> &amp;</type>
        <definition>virtual Dimension &amp; endstone::Actor::getDimension</definition>
        <argsstring>() const =0</argsstring>
        <name>getDimension</name>
        <qualifiedname>endstone::Actor::getDimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the current <ref refid="classendstone_1_1Dimension" kindref="compound">Dimension</ref> this actor resides in</para>
<para><simplesect kind="return"><para>The current <ref refid="classendstone_1_1Dimension" kindref="compound">Dimension</ref> this actor resides in </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="106" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a857512cc626e30cb57d03cacae88dd9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Actor::setRotation</definition>
        <argsstring>(float yaw, float pitch)=0</argsstring>
        <name>setRotation</name>
        <qualifiedname>endstone::Actor::setRotation</qualifiedname>
        <param>
          <type>float</type>
          <declname>yaw</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pitch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Sets the actor&apos;s rotation. </para>
</simplesect>
Note that if the actor is affected by AI, it may override this rotation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>yaw</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation around the up axis (Y axis) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pitch</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation around the right axis (X axis) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="116" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1aa012c328995d90d51c31bb2116bf6eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Actor::teleport</definition>
        <argsstring>(Location location)=0</argsstring>
        <name>teleport</name>
        <qualifiedname>endstone::Actor::teleport</qualifiedname>
        <param>
          <type><ref refid="classendstone_1_1Location" kindref="compound">Location</ref></type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Teleports this actor to the given location.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>New location to teleport this actor to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="123" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a17192ce29b31550384e64a68e37e2af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Actor::teleport</definition>
        <argsstring>(Actor &amp;target)=0</argsstring>
        <name>teleport</name>
        <qualifiedname>endstone::Actor::teleport</qualifiedname>
        <param>
          <type><ref refid="classendstone_1_1Actor" kindref="compound">Actor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Teleports this actor to the target <ref refid="classendstone_1_1Actor" kindref="compound">Actor</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Actor" kindref="compound">Actor</ref> to teleport this actor to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="130" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a78059bed5b1a6b23bfb2be9ac6ae81a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::int64_t</type>
        <definition>virtual std::int64_t endstone::Actor::getId</definition>
        <argsstring>() const =0</argsstring>
        <name>getId</name>
        <qualifiedname>endstone::Actor::getId</qualifiedname>
        <briefdescription>
<para>Returns a unique id for this actor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classendstone_1_1Actor" kindref="compound">Actor</ref> id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="137" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a896dcb16d037d3591b0d39480521a193" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Actor::remove</definition>
        <argsstring>()=0</argsstring>
        <name>remove</name>
        <qualifiedname>endstone::Actor::remove</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove this actor from the level.</para>
<para>If you are trying to remove a <ref refid="classendstone_1_1Player" kindref="compound">Player</ref>, use <ref refid="classendstone_1_1Player_1a6dbf34f6330cf0c9e17872426e1c2eb0" kindref="member">Player::kick</ref> instead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="144" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1aa099af11ae3053289f31c65c9126b50a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Actor::isDead</definition>
        <argsstring>() const =0</argsstring>
        <name>isDead</name>
        <qualifiedname>endstone::Actor::isDead</qualifiedname>
        <briefdescription>
<para>Returns true if this actor has been marked for removal. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if it is dead. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="151" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a5b744893654143e1d8a1f03b1d3cc459" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Actor::isValid</definition>
        <argsstring>() const =0</argsstring>
        <name>isValid</name>
        <qualifiedname>endstone::Actor::isValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the entity has died, been despawned for some other reason, or has not been added to the level.</para>
<para><simplesect kind="return"><para>True if valid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="158" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a547e0f2ecb4be6edb82f909f48946031" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int endstone::Actor::getHealth</definition>
        <argsstring>() const =0</argsstring>
        <name>getHealth</name>
        <qualifiedname>endstone::Actor::getHealth</qualifiedname>
        <briefdescription>
<para>Gets the entity&apos;s health from 0 to its max possible value, where 0 is dead. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Health represented from 0 to max </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="165" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a39c0d4e763cafb181f1071de2c31b647" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>Result&lt; void &gt;</type>
        <definition>virtual Result&lt; void &gt; endstone::Actor::setHealth</definition>
        <argsstring>(int health) const =0</argsstring>
        <name>setHealth</name>
        <qualifiedname>endstone::Actor::setHealth</qualifiedname>
        <param>
          <type>int</type>
          <declname>health</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the entity&apos;s health from 0 to its possible value, where 0 is dead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>health</parametername>
</parameternamelist>
<parameterdescription>
<para>New health represented from 0 to max </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="172" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a612dffb2563ce0535c0e2d7214c6254b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int endstone::Actor::getMaxHealth</definition>
        <argsstring>() const =0</argsstring>
        <name>getMaxHealth</name>
        <qualifiedname>endstone::Actor::getMaxHealth</qualifiedname>
        <briefdescription>
<para>Gets the maximum health this entity has. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Maximum health </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="179" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1aab1b3bf14d77e70515a6afacb3219e86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt; std::string &gt; endstone::Actor::getScoreboardTags</definition>
        <argsstring>() const =0</argsstring>
        <name>getScoreboardTags</name>
        <qualifiedname>endstone::Actor::getScoreboardTags</qualifiedname>
        <briefdescription>
<para>Returns a list of scoreboard tags for this actor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a list of scoreboard tags for this actor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="186" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a7df17ed4f47907e5022b1eff1f306271" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Actor::addScoreboardTag</definition>
        <argsstring>(std::string tag) const =0</argsstring>
        <name>addScoreboardTag</name>
        <qualifiedname>endstone::Actor::addScoreboardTag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
<para>Adds a tag to this actor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the tag was successfully added, false if the tag already exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="194" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a6f068c4612aa487ba76d3a4c3e3b1033" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Actor::removeScoreboardTag</definition>
        <argsstring>(std::string tag) const =0</argsstring>
        <name>removeScoreboardTag</name>
        <qualifiedname>endstone::Actor::removeScoreboardTag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
<para>Removes a given tag from this actor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the tag was successfully removed, false if the tag does not exist. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="202" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1ada87051d8b64c9df5cab73732bddf710" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Actor::isNameTagVisible</definition>
        <argsstring>() const =0</argsstring>
        <name>isNameTagVisible</name>
        <qualifiedname>endstone::Actor::isNameTagVisible</qualifiedname>
        <briefdescription>
<para>Checks if the actor&apos;s name tag is currently visible. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the name tag is visible, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="209" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a81d7145659190f3419446959641b4989" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Actor::setNameTagVisible</definition>
        <argsstring>(bool visible)=0</argsstring>
        <name>setNameTagVisible</name>
        <qualifiedname>endstone::Actor::setNameTagVisible</qualifiedname>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Sets if the actor&apos;s name tag is visible or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visible</parametername>
</parameternamelist>
<parameterdescription>
<para>True to make the name tag visible, false to hide it. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="216" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a26211c565a42de6f28565bed6d3c854b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::Actor::isNameTagAlwaysVisible</definition>
        <argsstring>() const =0</argsstring>
        <name>isNameTagAlwaysVisible</name>
        <qualifiedname>endstone::Actor::isNameTagAlwaysVisible</qualifiedname>
        <briefdescription>
<para>Checks if the actor&apos;s name tag is always visible. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the name tag is always visible, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="223" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a6c7dc2e5a9b99db8b000e84e4eba5822" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Actor::setNameTagAlwaysVisible</definition>
        <argsstring>(bool visible)=0</argsstring>
        <name>setNameTagAlwaysVisible</name>
        <qualifiedname>endstone::Actor::setNameTagAlwaysVisible</qualifiedname>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Sets whether the actor&apos;s name tag should always be visible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visible</parametername>
</parameternamelist>
<parameterdescription>
<para>True to make the name tag always visible, false to disable always visibility. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="230" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a7bac2e604ceb3d48c3fbc6a628f6eaec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string endstone::Actor::getNameTag</definition>
        <argsstring>() const =0</argsstring>
        <name>getNameTag</name>
        <qualifiedname>endstone::Actor::getNameTag</qualifiedname>
        <briefdescription>
<para>Gets the current name tag of the actor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The name tag. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="237" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1afa33b47ae91605841f0c4ef5ec127ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Actor::setNameTag</definition>
        <argsstring>(std::string name)=0</argsstring>
        <name>setNameTag</name>
        <qualifiedname>endstone::Actor::setNameTag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the name tag for the actor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The new name tag to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="244" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1a29bb3fe504b2b2bffd749a0d9ef1ed92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string endstone::Actor::getScoreTag</definition>
        <argsstring>() const =0</argsstring>
        <name>getScoreTag</name>
        <qualifiedname>endstone::Actor::getScoreTag</qualifiedname>
        <briefdescription>
<para>Gets the current score tag of the actor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The score tag. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="251" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1Actor_1adeec376304cd5900f6c848f9e946320e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void endstone::Actor::setScoreTag</definition>
        <argsstring>(std::string score)=0</argsstring>
        <name>setScoreTag</name>
        <qualifiedname>endstone::Actor::setScoreTag</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>score</declname>
        </param>
        <briefdescription>
<para>Sets the score tag for the actor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>score</parametername>
</parameternamelist>
<parameterdescription>
<para>The new score tag to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/actor/actor.h" line="258" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents a base actor in the level. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>endstone::Actor</label>
        <link refid="classendstone_1_1Actor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>endstone::CommandSender</label>
        <link refid="classendstone_1_1CommandSender"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>endstone::Item</label>
        <link refid="classendstone_1_1Item"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>endstone::Mob</label>
        <link refid="classendstone_1_1Mob"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>endstone::Permissible</label>
        <link refid="classendstone_1_1Permissible"/>
      </node>
      <node id="6">
        <label>endstone::Player</label>
        <link refid="classendstone_1_1Player"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>endstone::Actor</label>
        <link refid="classendstone_1_1Actor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>endstone::CommandSender</label>
        <link refid="classendstone_1_1CommandSender"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>endstone::Permissible</label>
        <link refid="classendstone_1_1Permissible"/>
      </node>
    </collaborationgraph>
    <location file="include/endstone/actor/actor.h" line="27" column="1" bodyfile="include/endstone/actor/actor.h" bodystart="27" bodyend="259"/>
    <listofallmembers>
      <member refid="classendstone_1_1Permissible_1a08be02debf01b55544c4566931ed98fc" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>addAttachment</name></member>
      <member refid="classendstone_1_1Permissible_1ab1adef2b8d0494a9bfcd9c9ffb995f2b" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>addAttachment</name></member>
      <member refid="classendstone_1_1Actor_1a7df17ed4f47907e5022b1eff1f306271" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>addScoreboardTag</name></member>
      <member refid="classendstone_1_1CommandSender_1a981997682a69961a0cb5e92b7a70f4ff" prot="public" virt="virtual"><scope>endstone::Actor</scope><name>asActor</name></member>
      <member refid="classendstone_1_1CommandSender_1afece60cdcb1ef41acc69bcb8a482320f" prot="public" virt="virtual"><scope>endstone::Actor</scope><name>asBlock</name></member>
      <member refid="classendstone_1_1CommandSender_1a4f5be88d28d49e1c7424acd1c30fc893" prot="public" virt="virtual"><scope>endstone::Actor</scope><name>asCommandSender</name></member>
      <member refid="classendstone_1_1CommandSender_1ad52351f5219698ad2bb2fbd6509c80f5" prot="public" virt="virtual"><scope>endstone::Actor</scope><name>asConsole</name></member>
      <member refid="classendstone_1_1Actor_1a6c81fe219b046d28cdf13c5c400793c6" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>asItem</name></member>
      <member refid="classendstone_1_1Actor_1acbd7afe34e58507083765ae5d27ff9c0" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>asMob</name></member>
      <member refid="classendstone_1_1CommandSender_1aef66d1ad6c2cbc924e51f02407f94fa3" prot="public" virt="virtual"><scope>endstone::Actor</scope><name>asPlayer</name></member>
      <member refid="classendstone_1_1Actor_1ab4562c41d071b945338d742ac8d1e639" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getDimension</name></member>
      <member refid="classendstone_1_1Permissible_1ad9307f3eef07e6e03a55b4fe9aab9be6" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getEffectivePermissions</name></member>
      <member refid="classendstone_1_1Actor_1a547e0f2ecb4be6edb82f909f48946031" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getHealth</name></member>
      <member refid="classendstone_1_1Actor_1a78059bed5b1a6b23bfb2be9ac6ae81a3" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getId</name></member>
      <member refid="classendstone_1_1Actor_1aff1ed8218696acc7009bf7ce5a5069a2" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getLevel</name></member>
      <member refid="classendstone_1_1Actor_1a32d24d587443d4107786096fda5322fb" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getLocation</name></member>
      <member refid="classendstone_1_1Actor_1a612dffb2563ce0535c0e2d7214c6254b" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getMaxHealth</name></member>
      <member refid="classendstone_1_1CommandSender_1acf20807a70561a571e20d4ee3791d69e" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getName</name></member>
      <member refid="classendstone_1_1Actor_1a7bac2e604ceb3d48c3fbc6a628f6eaec" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getNameTag</name></member>
      <member refid="classendstone_1_1Permissible_1a6d78baa46215c951dc25cb5e55af085c" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getPermissionLevel</name></member>
      <member refid="classendstone_1_1Actor_1ab2848bd47a25fce207a1a4e6b1783ce3" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getRuntimeId</name></member>
      <member refid="classendstone_1_1Actor_1aab1b3bf14d77e70515a6afacb3219e86" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getScoreboardTags</name></member>
      <member refid="classendstone_1_1Actor_1a29bb3fe504b2b2bffd749a0d9ef1ed92" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getScoreTag</name></member>
      <member refid="classendstone_1_1CommandSender_1aecd5cad85026861938379fa283d626cf" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getServer</name></member>
      <member refid="classendstone_1_1Actor_1a35dbee5875715f9edd8be8b117377129" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getType</name></member>
      <member refid="classendstone_1_1Actor_1a0f73b7b1bcc0f18ce4cc238fdcea69b4" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>getVelocity</name></member>
      <member refid="classendstone_1_1Permissible_1ade03215666f81be410f2b058fa2c158b" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>hasPermission</name></member>
      <member refid="classendstone_1_1Permissible_1ae3da30350acda91f5a007e15fc783ae6" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>hasPermission</name></member>
      <member refid="classendstone_1_1Actor_1aa099af11ae3053289f31c65c9126b50a" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>isDead</name></member>
      <member refid="classendstone_1_1Actor_1a876f9f220c4628b15556f2b50b103928" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>isInLava</name></member>
      <member refid="classendstone_1_1Actor_1a07d1ec2bc5458fbd0c4d60711e4ddcd1" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>isInWater</name></member>
      <member refid="classendstone_1_1Actor_1a26211c565a42de6f28565bed6d3c854b" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>isNameTagAlwaysVisible</name></member>
      <member refid="classendstone_1_1Actor_1ada87051d8b64c9df5cab73732bddf710" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>isNameTagVisible</name></member>
      <member refid="classendstone_1_1Actor_1a7cfff436cf3ddabdb1f28f744234f218" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>isOnGround</name></member>
      <member refid="classendstone_1_1Permissible_1ae625f98f57116c559dc35a6cfce960d9" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>isPermissionSet</name></member>
      <member refid="classendstone_1_1Permissible_1af40d6121208b293a05abf56c47792995" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>isPermissionSet</name></member>
      <member refid="classendstone_1_1Actor_1a5b744893654143e1d8a1f03b1d3cc459" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>isValid</name></member>
      <member refid="classendstone_1_1Permissible_1acbd0e4c4815db28b66ef14976f110af5" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>recalculatePermissions</name></member>
      <member refid="classendstone_1_1Actor_1a896dcb16d037d3591b0d39480521a193" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>remove</name></member>
      <member refid="classendstone_1_1Permissible_1a29dd5407f2c750a9b267f335d47aad29" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>removeAttachment</name></member>
      <member refid="classendstone_1_1Actor_1a6f068c4612aa487ba76d3a4c3e3b1033" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>removeScoreboardTag</name></member>
      <member refid="classendstone_1_1CommandSender_1a25f6e7b7397652fd14cb57bc994b00eb" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>sendErrorMessage</name></member>
      <member refid="classendstone_1_1CommandSender_1a9ef7b0d45dc7ba12073ce93187c54b87" prot="public" virt="non-virtual"><scope>endstone::Actor</scope><name>sendErrorMessage</name></member>
      <member refid="classendstone_1_1CommandSender_1a000782a076576822ea70b640f5f230ea" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>sendMessage</name></member>
      <member refid="classendstone_1_1CommandSender_1a991e541b0e30e75ab7f508d6fdb141ad" prot="public" virt="non-virtual"><scope>endstone::Actor</scope><name>sendMessage</name></member>
      <member refid="classendstone_1_1Actor_1a39c0d4e763cafb181f1071de2c31b647" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>setHealth</name></member>
      <member refid="classendstone_1_1Actor_1afa33b47ae91605841f0c4ef5ec127ac7" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>setNameTag</name></member>
      <member refid="classendstone_1_1Actor_1a6c7dc2e5a9b99db8b000e84e4eba5822" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>setNameTagAlwaysVisible</name></member>
      <member refid="classendstone_1_1Actor_1a81d7145659190f3419446959641b4989" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>setNameTagVisible</name></member>
      <member refid="classendstone_1_1Actor_1a857512cc626e30cb57d03cacae88dd9f" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>setRotation</name></member>
      <member refid="classendstone_1_1Actor_1adeec376304cd5900f6c848f9e946320e" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>setScoreTag</name></member>
      <member refid="classendstone_1_1Actor_1aa012c328995d90d51c31bb2116bf6eb5" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>teleport</name></member>
      <member refid="classendstone_1_1Actor_1a17192ce29b31550384e64a68e37e2af9" prot="public" virt="pure-virtual"><scope>endstone::Actor</scope><name>teleport</name></member>
      <member refid="classendstone_1_1Permissible_1afd630275e217c42932d29208712fe438" prot="public" virt="virtual"><scope>endstone::Actor</scope><name>~Permissible</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
