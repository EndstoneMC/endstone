<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classendstone_1_1BlockState" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>endstone::BlockState</compoundname>
    <includes refid="block__state_8h" local="no">endstone/block/block_state.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classendstone_1_1BlockState_1a7e3b8131f58cbb0ba1cd3338d8b90c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual endstone::BlockState::~BlockState</definition>
        <argsstring>()=default</argsstring>
        <name>~BlockState</name>
        <qualifiedname>endstone::BlockState::~BlockState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="34" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1af4b36588a23e8df26ea57425c206265f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; <ref refid="classendstone_1_1Block" kindref="compound">Block</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt; Block &gt; endstone::BlockState::getBlock</definition>
        <argsstring>() const =0</argsstring>
        <name>getBlock</name>
        <qualifiedname>endstone::BlockState::getBlock</qualifiedname>
        <briefdescription>
<para>Gets the block represented by this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the block represented by this block state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="41" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1ae5c5fbb7989498006f3e7e48d76e10cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string endstone::BlockState::getType</definition>
        <argsstring>() const =0</argsstring>
        <name>getType</name>
        <qualifiedname>endstone::BlockState::getType</qualifiedname>
        <briefdescription>
<para>Gets the type of this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>block type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="48" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a54629f4faa893e30d1ef4d4ac15bf147" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Result&lt; void &gt;</type>
        <definition>virtual Result&lt; void &gt; endstone::BlockState::setType</definition>
        <argsstring>(std::string type)=0</argsstring>
        <name>setType</name>
        <qualifiedname>endstone::BlockState::setType</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Sets the type of this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classendstone_1_1Block" kindref="compound">Block</ref> type to change this block state to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="55" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a18ebe2b1c527ebb7b915157bb2d0c557" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; <ref refid="classendstone_1_1BlockData" kindref="compound">BlockData</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt; BlockData &gt; endstone::BlockState::getData</definition>
        <argsstring>() const =0</argsstring>
        <name>getData</name>
        <qualifiedname>endstone::BlockState::getData</qualifiedname>
        <briefdescription>
<para>Gets the data for this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>block specific data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="62" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a97427ac349aacfcc0d617ec52fb33ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>Result&lt; void &gt;</type>
        <definition>virtual Result&lt; void &gt; endstone::BlockState::setData</definition>
        <argsstring>(const BlockData &amp;data)=0</argsstring>
        <name>setData</name>
        <qualifiedname>endstone::BlockState::setData</qualifiedname>
        <param>
          <type>const <ref refid="classendstone_1_1BlockData" kindref="compound">BlockData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Sets the data for this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>New block specific data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="69" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a0d30c01fe70f8e5b591a23fe36490738" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Dimension" kindref="compound">Dimension</ref> &amp;</type>
        <definition>virtual Dimension &amp; endstone::BlockState::getDimension</definition>
        <argsstring>() const =0</argsstring>
        <name>getDimension</name>
        <qualifiedname>endstone::BlockState::getDimension</qualifiedname>
        <briefdescription>
<para>Gets the dimension which contains the block represented by this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the dimension containing the block represented by this block state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="76" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a465f89196adeb9f1cb76b1425f8b1856" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int endstone::BlockState::getX</definition>
        <argsstring>() const =0</argsstring>
        <name>getX</name>
        <qualifiedname>endstone::BlockState::getX</qualifiedname>
        <briefdescription>
<para>Gets the x-coordinate of this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>x-coordinate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="83" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a26cb455d3bb6d9ab6f703d1df14c9232" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int endstone::BlockState::getY</definition>
        <argsstring>() const =0</argsstring>
        <name>getY</name>
        <qualifiedname>endstone::BlockState::getY</qualifiedname>
        <briefdescription>
<para>Gets the y-coordinate of this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>y-coordinate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="90" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a1d4ccdc3539f2d549ef3d98393bb89af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int endstone::BlockState::getZ</definition>
        <argsstring>() const =0</argsstring>
        <name>getZ</name>
        <qualifiedname>endstone::BlockState::getZ</qualifiedname>
        <briefdescription>
<para>Gets the z-coordinate of this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>z-coordinate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="97" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a6f8f4a475c2c955b1a883877d9b4baf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classendstone_1_1Location" kindref="compound">Location</ref></type>
        <definition>virtual Location endstone::BlockState::getLocation</definition>
        <argsstring>() const =0</argsstring>
        <name>getLocation</name>
        <qualifiedname>endstone::BlockState::getLocation</qualifiedname>
        <briefdescription>
<para>Gets the location of this block state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the location </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="104" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1aeaca92e63b3fa7bf37eb82e59bb9a45d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::BlockState::update</definition>
        <argsstring>()=0</argsstring>
        <name>update</name>
        <qualifiedname>endstone::BlockState::update</qualifiedname>
        <briefdescription>
<para>Attempts to update the block represented by this state, setting it to yhe new values as defined by this state. </para>
        </briefdescription>
        <detaileddescription>
<para>This has the same effect as calling <ref refid="classendstone_1_1BlockState_1a4d603b37f4b38df4151ced22c7f78331" kindref="member">update(false)</ref>. That is to say, this will not modify the state of a block if it is no longer the same type as it was when this state was taken. It will return false in this eventuality.</para>
<para><simplesect kind="return"><para>true if the update was successful, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="114" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a4d603b37f4b38df4151ced22c7f78331" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::BlockState::update</definition>
        <argsstring>(bool force)=0</argsstring>
        <name>update</name>
        <qualifiedname>endstone::BlockState::update</qualifiedname>
        <param>
          <type>bool</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Attempts to update the block represented by this state, setting it to the new values as defined by this state. </para>
        </briefdescription>
        <detaileddescription>
<para>This has the same effect as calling <ref refid="classendstone_1_1BlockState_1a6bb9b025f0e02b8ec732e6a74c27b599" kindref="member">update(force, true)</ref>. That is to say, this will trigger a physics update to surrounding blocks.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>true to forcefully set the state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the update was successful, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="124" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classendstone_1_1BlockState_1a6bb9b025f0e02b8ec732e6a74c27b599" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool endstone::BlockState::update</definition>
        <argsstring>(bool force, bool apply_physics)=0</argsstring>
        <name>update</name>
        <qualifiedname>endstone::BlockState::update</qualifiedname>
        <param>
          <type>bool</type>
          <declname>force</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>apply_physics</declname>
        </param>
        <briefdescription>
<para>Attempts to update the block represented by this state, setting it to the new values as defined by this state. </para>
        </briefdescription>
        <detaileddescription>
<para>Unless force is true, this will not modify the state of a block if it is no longer the same type as it was when this state was taken. It will return false in this eventuality. </para>
<para>If force is true, it will set the type of the block to match the new state, set the state data and then return true. </para>
<para>If apply_physics is true, it will trigger a physics update on surrounding blocks which could cause them to update or disappear.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>true to forcefully set the state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>apply_physics</parametername>
</parameternamelist>
<parameterdescription>
<para>false to cancel updating physics on surrounding blocks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the update was successful, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/endstone/block/block_state.h" line="137" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents a captured state of a block, which will not update automatically. </para>
    </briefdescription>
    <detaileddescription>
<para>Unlike <ref refid="classendstone_1_1Block" kindref="compound">Block</ref>, which only one object can exist per coordinate, <ref refid="classendstone_1_1BlockState" kindref="compound">BlockState</ref> can exist multiple times for any given <ref refid="classendstone_1_1Block" kindref="compound">Block</ref>. Note that another plugin may change the state of the block, and you will not know, or they may change the block to another type entirely, causing your <ref refid="classendstone_1_1BlockState" kindref="compound">BlockState</ref> to become invalid. </para>
    </detaileddescription>
    <location file="include/endstone/block/block_state.h" line="32" column="1" bodyfile="include/endstone/block/block_state.h" bodystart="32" bodyend="138"/>
    <listofallmembers>
      <member refid="classendstone_1_1BlockState_1af4b36588a23e8df26ea57425c206265f" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>getBlock</name></member>
      <member refid="classendstone_1_1BlockState_1a18ebe2b1c527ebb7b915157bb2d0c557" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>getData</name></member>
      <member refid="classendstone_1_1BlockState_1a0d30c01fe70f8e5b591a23fe36490738" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>getDimension</name></member>
      <member refid="classendstone_1_1BlockState_1a6f8f4a475c2c955b1a883877d9b4baf5" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>getLocation</name></member>
      <member refid="classendstone_1_1BlockState_1ae5c5fbb7989498006f3e7e48d76e10cf" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>getType</name></member>
      <member refid="classendstone_1_1BlockState_1a465f89196adeb9f1cb76b1425f8b1856" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>getX</name></member>
      <member refid="classendstone_1_1BlockState_1a26cb455d3bb6d9ab6f703d1df14c9232" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>getY</name></member>
      <member refid="classendstone_1_1BlockState_1a1d4ccdc3539f2d549ef3d98393bb89af" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>getZ</name></member>
      <member refid="classendstone_1_1BlockState_1a97427ac349aacfcc0d617ec52fb33ff8" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>setData</name></member>
      <member refid="classendstone_1_1BlockState_1a54629f4faa893e30d1ef4d4ac15bf147" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>setType</name></member>
      <member refid="classendstone_1_1BlockState_1aeaca92e63b3fa7bf37eb82e59bb9a45d" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>update</name></member>
      <member refid="classendstone_1_1BlockState_1a4d603b37f4b38df4151ced22c7f78331" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>update</name></member>
      <member refid="classendstone_1_1BlockState_1a6bb9b025f0e02b8ec732e6a74c27b599" prot="public" virt="pure-virtual"><scope>endstone::BlockState</scope><name>update</name></member>
      <member refid="classendstone_1_1BlockState_1a7e3b8131f58cbb0ba1cd3338d8b90c12" prot="public" virt="virtual"><scope>endstone::BlockState</scope><name>~BlockState</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
